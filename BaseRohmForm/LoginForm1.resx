<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="LogoPictureBox.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        C+FYcJuYKeBReoQB/9k=
</value>
  </data>
</root>